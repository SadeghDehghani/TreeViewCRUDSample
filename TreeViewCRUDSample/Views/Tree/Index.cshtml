@{
    ViewData["Title"] = "Tree View";


}


<h2>Tree View</h2>
<input type="text" id="search" placeholder="Search..." class="form-control mb-3" />
<button id="saveSelected" class="btn btn-success mb-3">Save Selected</button>
<div id="tree"></div>
<div class="mt-3">
    <h4>Selected IDs:</h4>
    <ul id="selectedList"></ul>
</div>


@section Scripts{

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jstree/3.3.12/jstree.min.js"></script>



    <script>



        $(function () {
            $.getJSON("/Tree/GetNodes", function (data) {
                let treeData = data.map(x => ({ id: x.id.toString(), parent: x.parentId ? x.parentId.toString() : "#", text: x.name }));
                $('#tree').jstree({
                    'core': {
                        'check_callback': true,
                        'data': treeData
                    },
                    'checkbox': {
                        'keep_selected_style': false,
                        'three_state': false,
                        'cascade': ''
                    },
                    'plugins': ["checkbox", "contextmenu", "dnd", "types", "wholerow", "search"],
                    'contextmenu': {
                        'items': function (node) {
                            return {
                                create: {
                                    label: "Add Child",
                                    action: function () {
                                        var nodeName = prompt("Name of new node:");
                                        if (nodeName) {
                                            $.post('/Tree/CreateNode', { parentId: node.id, name: nodeName }, function (newNode) {
                                                $('#tree').jstree(true).create_node(node, {
                                                    id: newNode.id.toString(),
                                                    text: newNode.name,
                                                    parent: node.id
                                                }, "last", function () {
                                                    $('#tree').jstree(true).open_node(node);
                                                });
                                            });
                                        }
                                    }
                                },
                                rename: {
                                    label: "Rename",
                                    action: function () {
                                        var newName = prompt("New name:", node.text);
                                        if (newName) {
                                            $.post('/Tree/RenameNode', { id: node.id, newName });
                                            $('#tree').jstree(true).rename_node(node, newName);
                                        }
                                    }
                                },
                                delete: {
                                    label: "<i class='fa fa-trash'></i> Delete",
                                    action: function () {
                                        if (confirm("Are you sure?")) {
                                            $.post('/Tree/DeleteNode', { id: node.id });
                                            $('#tree').jstree(true).delete_node(node);
                                        }
                                    }
                                }
                            };
                        }
                    }
                }).on('move_node.jstree', function (e, data) {
                    let siblingIds = [];
                    let parentNode = $('#tree').jstree(true).get_node(data.parent);
                    if (parentNode) {
                        siblingIds = parentNode.children;
                    }
                    $.post('/Tree/MoveNode', { id: data.node.id, newParentId: data.parent === "#" ? 0 : data.parent, siblingOrder: siblingIds });
                }).on('changed.jstree', function (e, data) {
                    if (data.action === 'select_node') {
                        // Auto-select parent
                        let node = data.node;
                        let tree = $('#tree').jstree(true);
                        let parent = tree.get_node(node.parent);
                        if (parent && parent.id !== "#") {
                            tree.select_node(parent);
                        }
                    }
                });

                // search
                let to = false;
                $('#search').keyup(function () {
                    if (to) clearTimeout(to);
                    to = setTimeout(function () {
                        let v = $('#search').val();
                        $('#tree').jstree(true).search(v);
                    }, 250);
                });

                // save selected
                $('#saveSelected').click(function () {
                    let selectedIds = $('#tree').jstree(true).get_checked();
                    $('#selectedList').html("");
                    selectedIds.forEach(function (id) {
                        $('#selectedList').append(`<li>${id}</li>`);
                    });

                    $.ajax({
                        url: '/Tree/SaveSelections',
                        method: 'POST',
                        contentType: 'application/json',
                        data: JSON.stringify(selectedIds),
                        success: function (res) {
                            alert(`Saved ${res.count} item(s).`);
                        }
                    });
                });
            });
        });
    </script>

}


